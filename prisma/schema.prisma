generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               Int         @id @default(autoincrement())
  name             String?     @db.VarChar(255)
  email            String      @unique @db.VarChar(255)
  password         String
  characters       Character[]
  createdItems     Item[]
  createdItemShops ItemShop[]
}

model Character {
  id                 Int      @id @default(autoincrement())
  name               String   @db.VarChar(255)
  userId             Int
  level              Int      @default(1)
  mettle             Int      @default(0)
  agility            Int      @default(0)
  heart              Int      @default(0)
  intellect          Int      @default(0)
  coin               Int      @default(5)
  languages          String[] @default(["allspeak"])
  characterClass     String
  characterLineage   String
  characterCulture   String
  currentHealth      Int      @default(0)
  currentStamina     Int      @default(0)
  maxHealth          Int      @default(0)
  maxStamina         Int      @default(0)
  armorName          String   @default("None")
  shieldName         String   @default("None")
  counter            Int
  baseDamage         Int      @default(0)
  rangeMin           Int      @default(0)
  rangeMax           Int      @default(0)
  featureChoiceSlugs String[]
  createdBy          User     @relation(fields: [userId], references: [id])
  items              Item[]   @relation("CharacterToItem")
}

model Item {
  id          Int         @id @default(autoincrement())
  title       String      @db.VarChar(255)
  isMagic     Boolean
  rarity      Rarity?
  uses        Json?
  text        RuleText[]
  heldBy      Character[] @relation("CharacterToItem")
  createdById Int         @default(1)
  createdBy   User        @relation(fields: [createdById], references: [id])
  effects     Json[]
  stockedBy   ItemShop[]  @relation(name: "InStockToItem")
  couldStock  ItemShop[]  @relation(name: "CouldStockToItem")
}

model RuleText {
  id     Int      @id @default(autoincrement())
  text   String
  type   String?
  choice String[]
  itemId Int?
  Item   Item?    @relation(fields: [itemId], references: [id])
}

model ItemShop {
  id              String @id @default(uuid())
  name            String
  description     String
  itemsInStock    Item[] @relation(name: "InStockToItem")
  itemsCouldStock Item[] @relation(name: "CouldStockToItem")
  createdById     Int    @default(1)
  createdBy       User   @relation(fields: [createdById], references: [id])
}

enum Rarity {
  COMMON
  UNCOMMON
  RARE
  LEGENDARY
  UNIQUE
}
